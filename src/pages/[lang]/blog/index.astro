---
import { getBlogPosts } from "../../../content/config";
import FormattedDate from "../../../components/FormattedDate.astro";
import Layout from "../../../layouts/Layout.astro";

const { lang } = Astro.params;

const posts = (await getBlogPosts())
  ?.filter((blog) => {
    return blog?.data?.lang === lang;
  })
  .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());

export async function getStaticPaths() {
  return ["en", "fr", "es"].map((lang) => {
    return { params: { lang } };
  });
}

const pageSize = 3;
const pages = Array.from({ length: Math.ceil(posts.length / pageSize) }, (_, i) => {
  const startIndex = i * pageSize;
  return posts.slice(startIndex, startIndex + pageSize);
});

const page = Astro.props;
---

<Layout title="Blog" description="Blog" lang={lang}>
  <style>
    main {
      width: 960px;
    }
    ul {
      display: flex;
      flex-wrap: wrap;
      gap: 2rem;
      list-style-type: none;
      margin: 0;
      padding: 0;
    }
    ul li {
      width: calc(50% - 1rem);
    }
    ul li * {
      text-decoration: none;
      transition: 0.2s ease;
    }
    ul li:first-child {
      width: 100%;
      margin-bottom: 1rem;
      text-align: center;
    }
    ul li:first-child img {
      width: 100%;
    }
    ul li:first-child .title {
      font-size: 2.369rem;
    }
    ul li img {
      margin-bottom: 0.5rem;
      border-radius: 12px;
    }
    ul li a {
      display: block;
    }
    .title {
      margin: 0;
      color: rgb(var(--black));
      line-height: 1;
    }
    .date {
      margin: 0;
      color: rgb(var(--gray));
    }
    ul li a:hover h4,
    ul li a:hover .date {
      color: rgb(var(--accent));
    }
    ul a:hover img {
      box-shadow: var(--box-shadow);
    }
    .display-pagination {
      display: contents;
    }
    .hidden-pagination {
      display: none;
    }
    .pagination-justify-center {
      display: flex;
      justify-content: center;
      gap: 0.5em;
      margin-top: 1em;
    }
    @media (max-width: 720px) {
      ul {
        gap: 0.5em;
      }
      ul li {
        width: 100%;
        text-align: center;
      }
      ul li:first-child {
        margin-bottom: 0;
      }
      ul li:first-child .title {
        font-size: 1.563em;
      }
    }
  </style>
  <section id="posts-list">
    <ul>
      {
        pages.map((page, index) => {
          return (
             <div id={`page-${index}`} class={`pagination-page ${index === 0 ? 'display-pagination' : 'hidden-pagination'}`} >
              {
                page.map((post) => {
                  return (
                  <li>
                    <a href={`/${lang}/blog/${post.blog_slug}`}>
                      <img width={720} height={360} src={post.data.heroImage} alt="" />
                      <h4 class="title">{post.data.title}</h4>
                      <p class="date">
                        <FormattedDate date={post.data.pubDate} />
                      </p>
                    </a>
                  </li>
                  );
                })
              }
              </div>
          );
        })
      }
    </ul>
    <div id="pagination" class="pagination-justify-center">
      {
        pages.map((page, index) => {
          const pageId = `page-${index}`;
          return (
            <button
              id={`btn-${index}`}
              onclick={`paginate('${pageId}')`}
            >
              {index + 1}
            </button>
          );
        })
      }
    </div>
  </section>

  <script is:inline>
    function paginate(pageId) {
      document.querySelectorAll('.pagination-page').forEach((element) => {

        if (element.id !== pageId) {
          element.classList.remove('display-pagination');
          element.classList.add('hidden-pagination');
        } else {
          element.classList.remove('hidden-pagination');
          element.classList.add('display-pagination');
        }
      });
    }
  </script>
</Layout>
